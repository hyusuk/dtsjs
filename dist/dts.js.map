{"version":3,"sources":["webpack:///webpack/bootstrap a871964c198752441f38","webpack:///./src/dts.js"],"names":["Row","features","target","Node","left","right","splitValue","splitFeatureName","splitType","mostCommon","operation","arr","indexOf","concat","length","sort","a","b","filter","v","pop","allTheSame","branch","map","row","i","self","asJSON","criterions","entropy","dataArr","allTargets","data","proportion","Math","log","TreeBuilder","maxDepth","minSamplesLeaf","_allTargets","testSplitData","featureName","push","splitData","bFeatureName","bSplitValue","bScore","Infinity","bDataArr","bSplitType","k","_build","node","depth","lenfth","build","DecisionTreeClassifier","_tree","_Xy2data","X","y","x","Array","isArray","j","_checkFitted","Error","fit","builder","predictOne","Object","assign","create","predict","exportTreeAsJSON","module","exports"],"mappings":"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","file":"dts.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a871964c198752441f38","class Row {\n  constructor (features, target) {\n    this.features = features\n    this.target = target\n  }\n}\n\nclass Node {\n  constructor ({left = null, right = null, splitValue = null,\n                splitFeatureName = null, splitType = 'categorical'} = {}) {\n    this.left = left\n    this.right = right\n    this.splitValue = splitValue\n    this.splitFeatureName = splitFeatureName\n    this.splitType = splitType\n  }\n\n  mostCommon (operation = 'lr') {\n    let arr = []\n    if (this.left instanceof Node || this.right instanceof Node) {\n      return null\n    }\n    if (operation.indexOf('l') > -1 && this.left !== null) {\n      arr = arr.concat(this.left)\n    }\n    if (operation.indexOf('r') > -1 && this.right !== null) {\n      arr = arr.concat(this.right)\n    }\n    if (arr.length === 0) {\n      return null\n    }\n    return arr.sort((a, b) =>\n      arr.filter(v => v.target === a.target).length - arr.filter(v => v.target === b.target).length\n    ).pop().target\n  }\n\n  allTheSame (operation = 'l') {\n    let branch\n    if (operation === 'l') {\n      branch = this.left\n    } else {\n      branch = this.right\n    }\n    return branch.map(row => row.target).filter((target, i, self) => {\n      return i === self.indexOf(target)\n    }).length === 1\n  }\n\n  asJSON () {\n    return {\n      splitFeatureName: this.splitFeatureName,\n      splitValue: this.splitValue,\n      splitType: this.splitType,\n      left: this.left instanceof Node ? this.left.asJSON() : this.left,\n      right: this.right instanceof Node ? this.right.asJSON() : this.right\n    }\n  }\n}\n\nconst criterions = {\n  entropy (dataArr, allTargets) {\n    let entropy = 0.0\n    for (let target of allTargets) {\n      for (let data of dataArr) {\n        if (data.length === 0) continue\n        const proportion = data.filter(row => row.target === target).length / data.length\n        if (proportion === 0) continue\n        entropy -= proportion * Math.log(proportion)\n      }\n    }\n    return entropy\n  }\n}\n\nclass TreeBuilder {\n  constructor ({maxDepth = 100, minSamplesLeaf = 1} = {}) {\n    this.maxDepth = maxDepth\n    this.minSamplesLeaf = minSamplesLeaf\n\n    this._allTargets = []\n  }\n\n  testSplitData (data, featureName, splitValue) {\n    let left = []\n    let right = []\n    for (let row of data) {\n      if (typeof splitValue === 'number') {\n        if (row.features[featureName] < splitValue) {\n          left.push(row)\n        } else {\n          right.push(row)\n        }\n      } else {\n        if (row.features[featureName] === splitValue) {\n          left.push(row)\n        } else {\n          right.push(row)\n        }\n      }\n    }\n    return [left, right]\n  }\n\n  splitData (data) {\n    let bFeatureName = null\n    let bSplitValue = null\n    let bScore = Infinity\n    let bDataArr = null\n    let bSplitType = 'categorical'\n    for (let row of data) {\n      for (let k in row.features) {\n        const dataArr = this.testSplitData(data, k, row.features[k])\n        const entropy = criterions.entropy(dataArr, this._allTargets)\n        if (entropy < bScore) {\n          bFeatureName = k\n          bSplitValue = row.features[k]\n          bScore = entropy\n          bDataArr = dataArr\n          bSplitType = typeof bSplitValue === 'number' ? 'numerical' : 'categorical'\n        }\n      }\n    }\n    return new Node({\n      left: bDataArr[0],\n      right: bDataArr[1],\n      splitFeatureName: bFeatureName,\n      splitValue: bSplitValue,\n      splitType: bSplitType\n    })\n  }\n\n  _build (node, depth) {\n    if (node.left === null || node.right === null ||\n        node.left.length === 0 || node.right.length === 0) {\n      node.left = node.right = node.mostCommon('lr')\n      return\n    }\n    if (depth >= this.maxDepth) {\n      node.left = node.mostCommon('l')\n      node.right = node.mostCommon('r')\n      return\n    }\n    if (node.left.length <= this.minSamplesLeaf || node.allTheSame('l')) {\n      node.left = node.mostCommon('l')\n    } else {\n      node.left = this.splitData(node.left)\n      this._build(node.left, depth + 1)\n    }\n    if (node.right.lenfth <= this.minSamplesLeaf || node.allTheSame('r')) {\n      node.right = node.mostCommon('r')\n    } else {\n      node.right = this.splitData(node.right)\n      this._build(node.right, depth + 1)\n    }\n  }\n\n  build (data) {\n    this._allTargets = data.map(row => row.target).filter((target, i, self) => {\n      return i === self.indexOf(target)\n    })\n    let node = this.splitData(data)\n    this._build(node, 0)\n    return node\n  }\n}\n\nclass DecisionTreeClassifier {\n  constructor ({maxDepth = 100, minSamplesLeaf = 1} = {}) {\n    this.maxDepth = maxDepth\n    this.minSamplesLeaf = minSamplesLeaf\n\n    this._tree = null\n  }\n\n  _Xy2data (X, y) {\n    let data = []\n    for (let i in X) {\n      const x = X[i]\n      let features = {}\n      if (Array.isArray(x)) {\n        for (let j in x) {\n          features[j] = x[j]\n        }\n      } else {\n        features = x\n      }\n      data.push(new Row(features, y[i]))\n    }\n    return data\n  }\n\n  _checkFitted () {\n    if (this._tree) return true\n    throw Error('Not fitted yet.')\n  }\n\n  fit (X, y) {\n    const data = this._Xy2data(X, y)\n    const builder = new TreeBuilder()\n    this._tree = builder.build(data)\n    return this\n  }\n\n  predictOne (x) {\n    this._checkFitted()\n    // clone tree as node\n    let node = Object.assign(Object.create(this._tree), this._tree)\n    while (true) {\n      if (node instanceof Node) {\n        if (x[node.splitFeatureName] < node.splitValue) {\n          node = node.left\n        } else {\n          node = node.right\n        }\n      } else {\n        return node\n      }\n    }\n  }\n\n  predict (X) {\n    return X.map(x => this.predictOne(x))\n  }\n\n  exportTreeAsJSON () {\n    this._checkFitted()\n    return this._tree.asJSON()\n  }\n}\n\nmodule.exports.Row = Row\nmodule.exports.Node = Node\nmodule.exports.criterions = criterions\nmodule.exports.TreeBuilder = TreeBuilder\nmodule.exports.DecisionTreeClassifier = DecisionTreeClassifier\n\n\n\n// WEBPACK FOOTER //\n// ./src/dts.js"],"sourceRoot":""}